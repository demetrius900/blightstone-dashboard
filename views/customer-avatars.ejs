<%- contentFor('html_attribute') %>
<%- contentFor('extra_css') %>
<%- contentFor('body_attribute') %>
<%- contentFor('content') %>

<div class="container-fluid">
    <!-- Page Title -->
    <div class="py-3 d-flex align-items-sm-center flex-sm-row flex-column">
        <div class="flex-grow-1">
            <div class="d-flex align-items-center">
                <div id="back-button-container" style="display: none;">
                    <a href="javascript:history.back()" class="btn btn-outline-secondary me-3">
                        <i class="mdi mdi-arrow-left"></i> Back
                    </a>
                </div>
                <div>
                    <h4 class="fs-18 fw-semibold m-0">Customer Avatars</h4>
                    <p class="text-muted mb-0" id="projectContext">Define and track target audience personas</p>
                </div>
            </div>
        </div>
        <div class="text-end">
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addAvatarModal">
                <i class="mdi mdi-plus me-2"></i>Add Avatar
            </button>
            <button class="btn btn-secondary ms-2" onclick="exportAvatarData()">
                <i class="mdi mdi-download me-2"></i>Export
            </button>
        </div>
    </div>

    <!-- Customer Avatars Table -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <!-- Filters -->
                    <div class="row mb-3">
                        <div class="col-md-3">
                            <select class="form-select" id="genderFilter">
                                <option value="">All Genders</option>
                                <option value="Male">Male</option>
                                <option value="Female">Female</option>
                                <option value="Non-binary">Non-binary</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <select class="form-select" id="ageGroupFilter">
                                <option value="">All Age Groups</option>
                                <option value="18-24">18-24</option>
                                <option value="25-34">25-34</option>
                                <option value="35-44">35-44</option>
                                <option value="45-54">45-54</option>
                                <option value="55+">55+</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <select class="form-select" id="incomeFilter">
                                <option value="">All Income Levels</option>
                                <option value="$0-30k">$0-30k</option>
                                <option value="$30k-50k">$30k-50k</option>
                                <option value="$50k-75k">$50k-75k</option>
                                <option value="$75k-100k">$75k-100k</option>
                                <option value="$100k+">$100k+</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <input type="text" class="form-control" id="searchAvatars" placeholder="Search avatars...">
                        </div>
                    </div>

                    <div class="table-responsive">
                        <table class="table table-hover" id="avatarsTable">
                            <thead class="table-light">
                                <tr>
                                    <th width="5%">
                                        <input type="checkbox" id="selectAll" class="form-check-input">
                                    </th>
                                    <th width="20%">Avatar Name</th>
                                    <th width="15%">Demographics</th>
                                    <th width="15%">Income Level</th>
                                    <th width="20%">Pain Points</th>
                                    <th width="15%">Goals</th>
                                    <th width="10%">Actions</th>
                                </tr>
                            </thead>
                            <tbody id="avatarsTableBody">
                                <tr>
                                    <td colspan="7" class="text-center py-4">
                                        <div class="spinner-border text-primary" role="status">
                                            <span class="visually-hidden">Loading...</span>
                                        </div>
                                        <p class="mt-2">Loading avatars...</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <!-- Bulk Actions -->
                    <div class="d-none" id="bulkActions">
                        <div class="bg-light p-3 rounded mb-3">
                            <div class="d-flex gap-2">
                                <button class="btn btn-sm btn-info" onclick="bulkExportAvatars()">
                                    <i class="mdi mdi-download me-1"></i>Export Selected
                                </button>
                                <button class="btn btn-sm btn-danger" onclick="bulkDeleteAvatars()">
                                    <i class="mdi mdi-delete me-1"></i>Delete Selected
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Avatar Multi-Step Modal -->
<div class="modal fade" id="addAvatarModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <div>
                    <h5 class="modal-title">Add Customer Avatar</h5>
                    <div class="progress mt-2" style="height: 4px;">
                        <div class="progress-bar" id="avatarProgress" role="progressbar" style="width: 50%"></div>
                    </div>
                    <div class="d-flex justify-content-between mt-1">
                        <small class="text-muted step-indicator active" data-step="1">Demographics</small>
                        <small class="text-muted step-indicator" data-step="2">Psychographics</small>
                    </div>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="addAvatarForm">
                <div class="modal-body" style="min-height: 400px;">
                    
                    <!-- Step 1: Demographics -->
                    <div class="step-content" id="avatarStep1" style="display: block;">
                        <h6 class="mb-3 text-primary">👤 Demographics & Basic Info</h6>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Avatar Name *</label>
                            <input type="text" class="form-control" name="name" placeholder="e.g., Busy Professional Mom" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Age Group</label>
                            <select class="form-select" name="age_group">
                                <option value="18-24">18-24</option>
                                <option value="25-34" selected>25-34</option>
                                <option value="35-44">35-44</option>
                                <option value="45-54">45-54</option>
                                <option value="55+">55+</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label class="form-label">Gender</label>
                            <select class="form-select" name="gender">
                                <option value="Female">Female</option>
                                <option value="Male">Male</option>
                                <option value="Non-binary">Non-binary</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label">Income Level</label>
                            <select class="form-select" name="income_level">
                                <option value="$0-30k">$0-30k</option>
                                <option value="$30k-50k">$30k-50k</option>
                                <option value="$50k-75k" selected>$50k-75k</option>
                                <option value="$75k-100k">$75k-100k</option>
                                <option value="$100k+">$100k+</option>
                            </select>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label">Location Type</label>
                            <select class="form-select" name="location">
                                <option value="Urban">Urban</option>
                                <option value="Suburban" selected>Suburban</option>
                                <option value="Rural">Rural</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Occupation</label>
                            <input type="text" class="form-control" name="occupation" placeholder="e.g., Marketing Manager">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Family Status</label>
                            <select class="form-select" name="family_status">
                                <option value="Single">Single</option>
                                <option value="Married">Married</option>
                                <option value="Married with kids" selected>Married with kids</option>
                                <option value="Single parent">Single parent</option>
                            </select>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Pain Points</label>
                        <textarea class="form-control" name="pain_points" rows="3" placeholder="What problems does this avatar face?"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Goals & Aspirations</label>
                        <textarea class="form-control" name="goals" rows="3" placeholder="What does this avatar want to achieve?"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Key Messaging</label>
                        <input type="text" class="form-control" name="key_messaging" placeholder="How to speak to this avatar">
                    </div>
                </div>
                
                <!-- Step 2: Psychographics -->
                <div class="step-content" id="avatarStep2" style="display: none;">
                    <h6 class="mb-3 text-primary">🧠 Psychographics & Behavior</h6>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Values & Beliefs</label>
                            <textarea class="form-control" name="values_beliefs" rows="3" placeholder="What values drive this avatar's decisions?"></textarea>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Lifestyle</label>
                            <textarea class="form-control" name="lifestyle" rows="3" placeholder="Describe their daily lifestyle"></textarea>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Communication Preferences</label>
                            <select class="form-select" name="communication_preferences">
                                <option value="Direct">Direct</option>
                                <option value="Emotional">Emotional</option>
                                <option value="Data-driven">Data-driven</option>
                                <option value="Story-based">Story-based</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Decision Making Style</label>
                            <select class="form-select" name="decision_style">
                                <option value="Quick">Quick</option>
                                <option value="Analytical">Analytical</option>
                                <option value="Emotional">Emotional</option>
                                <option value="Consultative">Consultative</option>
                            </select>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Additional Notes</label>
                        <textarea class="form-control" name="additional_notes" rows="3" placeholder="Any other important details about this avatar"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-outline-primary" id="avatarPrevStep" style="display: none;">
                    <i class="mdi mdi-arrow-left me-1"></i>Previous
                </button>
                <button type="submit" class="btn btn-primary">
                    <span id="addAvatarBtnText">Next →</span>
                    <span id="addAvatarSpinner" class="spinner-border spinner-border-sm d-none ms-2"></span>
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Edit Avatar Modal -->
<div class="modal fade" id="editAvatarModal" tabindex="-1" aria-labelledby="editAvatarModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAvatarModalLabel">Edit Customer Avatar</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editAvatarForm">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Avatar Name *</label>
                            <input type="text" class="form-control" id="editAvatarName" name="name" placeholder="e.g., Busy Professional Mom" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Age Group</label>
                            <select class="form-select" id="editAgeGroup" name="age_group">
                                <option value="18-24">18-24</option>
                                <option value="25-34" selected>25-34</option>
                                <option value="35-44">35-44</option>
                                <option value="45-54">45-54</option>
                                <option value="55+">55+</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label class="form-label">Gender</label>
                            <select class="form-select" id="editGender" name="gender">
                                <option value="Female">Female</option>
                                <option value="Male">Male</option>
                                <option value="Non-binary">Non-binary</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label">Income Level</label>
                            <select class="form-select" id="editIncomeLevel" name="income_level">
                                <option value="$0-30k">$0-30k</option>
                                <option value="$30k-50k">$30k-50k</option>
                                <option value="$50k-75k" selected>$50k-75k</option>
                                <option value="$75k-100k">$75k-100k</option>
                                <option value="$100k+">$100k+</option>
                            </select>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label">Location Type</label>
                            <select class="form-select" id="editLocation" name="location">
                                <option value="Urban">Urban</option>
                                <option value="Suburban" selected>Suburban</option>
                                <option value="Rural">Rural</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Occupation</label>
                            <input type="text" class="form-control" id="editOccupation" name="occupation" placeholder="e.g., Marketing Manager">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Family Status</label>
                            <select class="form-select" id="editFamilyStatus" name="family_status">
                                <option value="Single">Single</option>
                                <option value="Married">Married</option>
                                <option value="Married with kids" selected>Married with kids</option>
                                <option value="Single parent">Single parent</option>
                            </select>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Pain Points</label>
                        <textarea class="form-control" id="editPainPoints" name="pain_points" rows="3" placeholder="What problems does this avatar face?"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Goals & Aspirations</label>
                        <textarea class="form-control" id="editGoals" name="goals" rows="3" placeholder="What does this avatar want to achieve?"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Key Messaging</label>
                        <input type="text" class="form-control" id="editKeyMessaging" name="key_messaging" placeholder="How to speak to this avatar">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <span id="editAvatarBtnText">Update Avatar</span>
                        <span id="editAvatarSpinner" class="spinner-border spinner-border-sm ms-2" style="display: none;"></span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Avatar Modal -->
<div class="modal fade" id="deleteAvatarModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Avatar</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete <strong id="deleteAvatarName"></strong>?</p>
                <p class="text-muted small">This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="confirmDeleteAvatar()">Delete</button>
            </div>
        </div>
    </div>
</div>

<script>
let projectId;
let allAvatars = [];

// Get project ID from URL
function getProjectIdFromURL() {
    const urlParams = new URLSearchParams(window.location.search);
    return urlParams.get('id');
}

// Load avatars
async function loadAvatars() {
    try {
        showLoadingState();
        
        const response = await fetch(`/api/projects/${projectId}/avatars`);
        if (response.ok) {
            const avatars = await response.json();
            allAvatars = avatars;
            
            renderAvatars(avatars);
            updateBulkActions();
            
            console.log('✅ Avatars loaded:', avatars.length);
        } else {
            throw new Error('Failed to load avatars');
        }
    } catch (error) {
        console.error('Error loading avatars:', error);
        showErrorState('Failed to load avatars');
    }
}

// Show loading state
function showLoadingState() {
    const tbody = document.getElementById('avatarsTableBody');
    tbody.innerHTML = `
        <tr>
            <td colspan="7" class="text-center py-4">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-2">Loading avatars...</p>
            </td>
        </tr>
    `;
}

// Show error state
function showErrorState(message) {
    const tbody = document.getElementById('avatarsTableBody');
    tbody.innerHTML = `
        <tr>
            <td colspan="7" class="text-center py-4">
                <i class="mdi mdi-alert-circle fs-48 text-muted"></i>
                <h5 class="mt-3">Error</h5>
                <p class="text-muted">${message}</p>
                <button class="btn btn-primary" onclick="loadAvatars()">
                    <i class="mdi mdi-refresh me-2"></i>Retry
                </button>
            </td>
        </tr>
    `;
}

// Render avatars table
function renderAvatars(avatars) {
    const tbody = document.getElementById('avatarsTableBody');
    
    if (avatars.length === 0) {
        tbody.innerHTML = `
            <tr>
                <td colspan="7" class="text-center py-4">
                    <i class="mdi mdi-account-group fs-48 text-muted"></i>
                    <h5 class="mt-3">No Customer Avatars Yet</h5>
                    <p class="text-muted">Create your first customer avatar to get started</p>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addAvatarModal">
                        <i class="mdi mdi-plus me-2"></i>Add Avatar
                    </button>
                </td>
            </tr>
        `;
        return;
    }
    
    tbody.innerHTML = avatars.map(avatar => `
        <tr data-id="${avatar.id}">
            <td>
                <input type="checkbox" class="form-check-input avatar-checkbox" value="${avatar.id}">
            </td>
            <td>
                <div class="d-flex align-items-center">
                    <div class="avatar-icon me-2">
                        <i class="mdi mdi-account-circle fs-24 text-primary"></i>
                    </div>
                    <div>
                        <span class="fw-semibold">${avatar.name}</span>
                        <div class="text-muted small">${avatar.occupation || ''}</div>
                    </div>
                </div>
            </td>
            <td>
                <div class="small">
                    <div>${avatar.gender}, ${avatar.age_group}</div>
                    <div class="text-muted">${avatar.location}, ${avatar.family_status}</div>
                </div>
            </td>
            <td>
                <span class="badge bg-info">${avatar.income_level}</span>
            </td>
            <td>
                <span class="text-truncate d-inline-block" style="max-width: 200px;" title="${avatar.pain_points || ''}">${avatar.pain_points || ''}</span>
            </td>
            <td>
                <span class="text-truncate d-inline-block" style="max-width: 150px;" title="${avatar.goals || ''}">${avatar.goals || ''}</span>
            </td>
            <td>
                <div class="dropdown">
                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
                        <i class="mdi mdi-dots-vertical"></i>
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#" onclick="editAvatar('${avatar.id}')">
                            <i class="mdi mdi-pencil me-2"></i>Edit
                        </a></li>
                        <li><a class="dropdown-item" href="#" onclick="viewAvatarDetails('${avatar.id}')">
                            <i class="mdi mdi-eye me-2"></i>View Details
                        </a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item text-danger" href="#" onclick="deleteAvatar('${avatar.id}')">
                            <i class="mdi mdi-delete me-2"></i>Delete
                        </a></li>
                    </ul>
                </div>
            </td>
        </tr>
    `).join('');
}

// Update bulk actions
function updateBulkActions() {
    const checkboxes = document.querySelectorAll('.avatar-checkbox:checked');
    const bulkActions = document.getElementById('bulkActions');
    
    if (checkboxes.length > 0) {
        bulkActions.classList.remove('d-none');
    } else {
        bulkActions.classList.add('d-none');
    }
}

// Initialize filters and search
document.getElementById('genderFilter').addEventListener('change', filterAvatars);
document.getElementById('ageGroupFilter').addEventListener('change', filterAvatars);
document.getElementById('incomeFilter').addEventListener('change', filterAvatars);
document.getElementById('searchAvatars').addEventListener('input', filterAvatars);

function filterAvatars() {
    const genderFilter = document.getElementById('genderFilter').value;
    const ageFilter = document.getElementById('ageGroupFilter').value;
    const incomeFilter = document.getElementById('incomeFilter').value;
    const searchTerm = document.getElementById('searchAvatars').value.toLowerCase();
    
    let filtered = allAvatars.filter(avatar => {
        const matchesGender = !genderFilter || avatar.gender === genderFilter;
        const matchesAge = !ageFilter || avatar.age_group === ageFilter;
        const matchesIncome = !incomeFilter || avatar.income_level === incomeFilter;
        const matchesSearch = !searchTerm || 
            avatar.name?.toLowerCase().includes(searchTerm) ||
            avatar.occupation?.toLowerCase().includes(searchTerm) ||
            avatar.pain_points?.toLowerCase().includes(searchTerm);
        
        return matchesGender && matchesAge && matchesIncome && matchesSearch;
    });
    
    renderAvatars(filtered);
}



// Utility functions
function showButtonLoading(textId, spinnerId) {
    document.getElementById(textId).classList.add('d-none');
    document.getElementById(spinnerId).classList.remove('d-none');
}

function hideButtonLoading(textId, spinnerId, originalText) {
    document.getElementById(textId).classList.remove('d-none');
    document.getElementById(textId).textContent = originalText;
    document.getElementById(spinnerId).classList.add('d-none');
}

function showSuccess(message) {
    console.log('Success:', message);
}

function showError(message) {
    console.log('Error:', message);
}

// Edit avatar
function editAvatar(id) {
    console.log('🔧 editAvatar called with id:', id);
    const avatar = allAvatars.find(a => a.id === id);
    console.log('🔧 Found avatar:', avatar);
    if (!avatar) {
        console.error('❌ Avatar not found with id:', id);
        return;
    }
    
    // Populate edit form
    document.getElementById('editAvatarName').value = avatar.name || '';
    document.getElementById('editAgeGroup').value = avatar.age_group || '';
    document.getElementById('editGender').value = avatar.gender || '';
    document.getElementById('editIncomeLevel').value = avatar.income_level || '';
    document.getElementById('editLocation').value = avatar.location || '';
    document.getElementById('editOccupation').value = avatar.occupation || '';
    document.getElementById('editFamilyStatus').value = avatar.family_status || '';
    document.getElementById('editPainPoints').value = avatar.pain_points || '';
    document.getElementById('editGoals').value = avatar.goals || '';
    document.getElementById('editKeyMessaging').value = avatar.key_messaging || '';
    
    // Store the avatar ID for the form submission
    document.getElementById('editAvatarForm').dataset.avatarId = id;
    
    // Show the modal
    console.log('🔧 Showing edit modal...');
    const modal = new bootstrap.Modal(document.getElementById('editAvatarModal'));
    modal.show();
}

// Handle edit form submission
document.getElementById('editAvatarForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const avatarId = this.dataset.avatarId;
    if (!avatarId) {
        showError('No avatar selected for editing');
        return;
    }
    
    const formData = new FormData(e.target);
    const avatarData = Object.fromEntries(formData.entries());
    
    try {
        showButtonLoading('editAvatarBtnText', 'editAvatarSpinner');
        
        const response = await fetch(`/api/projects/${projectId}/avatars/${avatarId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(avatarData)
        });
        
        if (!response.ok) {
            throw new Error('Failed to update avatar');
        }
        
        hideButtonLoading('editAvatarBtnText', 'editAvatarSpinner', 'Update Avatar');
        bootstrap.Modal.getInstance(document.getElementById('editAvatarModal')).hide();
        e.target.reset();
        
        await loadAvatars();
        showSuccess('Customer avatar updated successfully!');
    } catch (error) {
        console.error('Error updating avatar:', error);
        hideButtonLoading('editAvatarBtnText', 'editAvatarSpinner', 'Update Avatar');
        showError('Failed to update avatar');
    }
});

// Initialize project context
document.addEventListener('DOMContentLoaded', function() {
    projectId = getProjectIdFromURL();
    
    if (projectId) {
        document.getElementById('back-button-container').style.display = 'block';
        
        // Project loaded from API
        const project = projects.find(p => p.id === projectId);
        if (project) {
            document.getElementById('projectContext').textContent = `Project: ${project.name}`;
        }
        
        loadAvatars();
    } else {
        document.getElementById('projectContext').textContent = 'No project selected';
    }
});

// Multi-step form navigation
let currentStep = 1;
const totalSteps = 2;

function nextStep() {
    if (currentStep < totalSteps) {
        // Hide current step
        document.getElementById(`avatarStep${currentStep}`).style.display = 'none';
        
        // Show next step
        currentStep++;
        document.getElementById(`avatarStep${currentStep}`).style.display = 'block';
        
        // Update progress bar
        const progress = (currentStep / totalSteps) * 100;
        document.getElementById('avatarProgress').style.width = progress + '%';
        
        // Update step indicators
        document.querySelectorAll('.step-indicator').forEach((indicator, index) => {
            if (index + 1 <= currentStep) {
                indicator.classList.add('active');
                indicator.classList.remove('text-muted');
            } else {
                indicator.classList.remove('active');
                indicator.classList.add('text-muted');
            }
        });
        
        // Update button text
        const submitBtn = document.querySelector('#addAvatarForm button[type="submit"]');
        if (currentStep === totalSteps) {
            submitBtn.innerHTML = '<span id="addAvatarBtnText">Add Avatar</span><span id="addAvatarSpinner" class="spinner-border spinner-border-sm d-none ms-2"></span>';
        } else {
            submitBtn.innerHTML = 'Next →';
        }
    }
}

function prevStep() {
    if (currentStep > 1) {
        // Hide current step
        document.getElementById(`avatarStep${currentStep}`).style.display = 'none';
        
        // Show previous step
        currentStep--;
        document.getElementById(`avatarStep${currentStep}`).style.display = 'block';
        
        // Update progress bar
        const progress = (currentStep / totalSteps) * 100;
        document.getElementById('avatarProgress').style.width = progress + '%';
        
        // Update step indicators
        document.querySelectorAll('.step-indicator').forEach((indicator, index) => {
            if (index + 1 <= currentStep) {
                indicator.classList.add('active');
                indicator.classList.remove('text-muted');
            } else {
                indicator.classList.remove('active');
                indicator.classList.add('text-muted');
            }
        });
        
        // Update button text
        const submitBtn = document.querySelector('#addAvatarForm button[type="submit"]');
        submitBtn.innerHTML = 'Next →';
    }
}

// Handle form submission
document.getElementById('addAvatarForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    if (currentStep < totalSteps) {
        // If not on last step, go to next step
        nextStep();
        return;
    }
    
    // On last step, submit the form
    const formData = new FormData(e.target);
    const avatarData = Object.fromEntries(formData.entries());
    
    try {
        showButtonLoading('addAvatarBtnText', 'addAvatarSpinner');
        
        const response = await fetch(`/api/projects/${projectId}/avatars`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(avatarData)
        });
        
        if (!response.ok) {
            throw new Error('Failed to save avatar');
        }
        
        hideButtonLoading('addAvatarBtnText', 'addAvatarSpinner', 'Add Avatar');
        bootstrap.Modal.getInstance(document.getElementById('addAvatarModal')).hide();
        e.target.reset();
        
        // Reset form to step 1
        currentStep = 1;
        document.getElementById('avatarStep1').style.display = 'block';
        document.getElementById('avatarStep2').style.display = 'none';
        document.getElementById('avatarProgress').style.width = '50%';
        document.querySelectorAll('.step-indicator').forEach((indicator, index) => {
            if (index === 0) {
                indicator.classList.add('active');
                indicator.classList.remove('text-muted');
            } else {
                indicator.classList.remove('active');
                indicator.classList.add('text-muted');
            }
        });
        
        await loadAvatars();
        showSuccess('Customer avatar added successfully!');
    } catch (error) {
        console.error('Error creating avatar:', error);
        hideButtonLoading('addAvatarBtnText', 'addAvatarSpinner', 'Add Avatar');
        showError('Failed to add avatar');
    }
});

// Initialize on page load
document.addEventListener('DOMContentLoaded', function() {
    projectId = getProjectIdFromURL();
    if (projectId) {
        document.getElementById('back-button-container').style.display = 'block';
        loadAvatars();
    } else {
        console.error('No project ID found in URL');
        window.location.href = '/projects';
    }
});

// Checkbox handling
document.addEventListener('change', function(e) {
    if (e.target.classList.contains('avatar-checkbox') || e.target.id === 'selectAll') {
        updateBulkActions();
    }
});

console.log('👥 Customer Avatars loaded!');
</script>

<%- contentFor('extra_javascript') %>